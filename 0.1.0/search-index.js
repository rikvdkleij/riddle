var searchIndex = JSON.parse('{\
"riddle":{"doc":"About RiddleRiddle is a Rust media library in the vein of…","i":[[3,"RiddleContext","riddle","Riddle main thread context. It can be accessed before the…",null,null],[3,"RiddleLib","","Riddle library initializer",null,null],[3,"RiddleState","","Riddle subsystem state handles",null,null],[12,"platform","","",0,null],[12,"input","","",0,null],[12,"time","","",0,null],[12,"audio","","",0,null],[4,"RiddleError","","",null,null],[13,"AudioError","","",1,null],[13,"FontError","","",1,null],[13,"ImageError","","",1,null],[13,"InputError","","",1,null],[13,"RendererError","","",1,null],[13,"WindowError","","",1,null],[4,"Event","","",null,null],[13,"Platform","","",2,null],[13,"Input","","",2,null],[13,"PreRunPlaceholder","","",2,null],[13,"ProcessFrame","","",2,null],[11,"quit","","Issue a quit request. The main loop will terminate once…",3,[[]]],[11,"event","","Get the event associated with this context.",3,[[],["event",4]]],[11,"state","","The Riddle state, allowing systems to be queried.",3,[[],["riddlestate",3]]],[11,"audio","","The audio system.",3,[[],["audiosystem",3]]],[11,"input","","The input system.",3,[[],["inputsystem",3]]],[11,"time","","The time system.",3,[[],["timesystem",3]]],[11,"platform","","The platform system.",3,[[],["platformsystem",3]]],[11,"new","","Initialize Riddle. All available subsystems will be…",4,[[],[["result",4],["riddleerror",4]]]],[11,"run","","Begin the main event loop of the program.",4,[[]]],[11,"run_with_err","","Begin the main event loop of the program, with an Error…",4,[[]]],[11,"context","","Get a [`RiddleContext`] during program initialization,…",4,[[],["riddlecontext",3]]],[11,"state","","The system state which is thread safe, and which can be…",4,[[],["riddlestate",3]]],[11,"platform","","Platform system state",0,[[],["platformsystem",3]]],[11,"input","","Input system state",0,[[],["inputsystem",3]]],[11,"time","","Time system state",0,[[],["timesystem",3]]],[11,"audio","","Audio system state",0,[[],["audiosystem",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",1,[[["audioerror",4]]]],[11,"from","","",1,[[["fonterror",4]]]],[11,"from","","",1,[[["imageerror",4]]]],[11,"from","","",1,[[["inputerror",4]]]],[11,"from","","",1,[[["renderererror",4]]]],[11,"from","","",1,[[["platformerror",4]]]],[11,"clone","","",0,[[],["riddlestate",3]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"borrow","","",3,[[],["platformcontext",3]]],[11,"source","","",1,[[],[["error",8],["option",4]]]]],"p":[[3,"RiddleState"],[4,"RiddleError"],[4,"Event"],[3,"RiddleContext"],[3,"RiddleLib"]]},\
"riddle_audio":{"doc":"Riddle crate for loading and playing audio data.","i":[[3,"AudioSystem","riddle_audio","The Riddle audio system core state.",null,null],[3,"AudioSystemHandle","","",null,null],[3,"AudioSystemWeak","","",null,null],[3,"Clip","","Stores the raw data of an audio file.",null,null],[3,"ClipPlayer","","Handles playback of a [`Clip`] with support for pausing,…",null,null],[3,"ClipPlayerBuilder","","Builder for [`ClipPlayer`]",null,null],[4,"PlayMode","","Enum describing what the player should do at the end of…",null,null],[13,"OneShot","","Stop playing at the end of the clip",0,null],[13,"Loop","","Return to the beginning of the clip and play it again",0,null],[4,"AudioError","","",null,null],[13,"InitFailed","","",1,null],[12,"cause","riddle_audio::AudioError","",2,null],[13,"ClipDecodeError","riddle_audio","",1,null],[13,"CommonError","","",1,null],[11,"downgrade","","Downgrade this handle to a weak handle",3,[[["audiosystemhandle",3]],["audiosystemweak",3]]],[11,"eq","","Test whether two handles point to the same location in…",3,[[["audiosystemhandle",3]]]],[11,"upgrade","","Upgrade a weak handle to a strong handle. Returns None if…",4,[[["audiosystemweak",3]],[["audiosystemhandle",3],["option",4]]]],[11,"new","","Create the audio system, connected to the default audio…",5,[[],[["result",4],["audioerror",4],["audiosystemhandle",3]]]],[11,"process_frame","","Update the system\'s state.",5,[[]]],[11,"new","","Reads the entirety of the data reader in to memory.",6,[[],[["result",4],["clip",3],["audioerror",4]]]],[11,"duration","","Get the run time of the clip, if it can be determined.",6,[[],[["duration",3],["option",4]]]],[11,"fade_volume","","Fade the volume from the current volume to the targat…",7,[[["duration",3]]]],[11,"set_volume","","Set the volume of playback immediately.",7,[[]]],[11,"get_nominal_volume","","Get the nominal volume of the player, which may not match…",7,[[]]],[11,"get_observed_volume","","Get the observed volume of the player, which is always…",7,[[]]],[11,"pause","","Pauses playback of the clip.",7,[[]]],[11,"resume","","Example",7,[[]]],[11,"stop","","Stops playback.",7,[[]]],[11,"new","","Make a new builder.",8,[[["audiosystem",3]]]],[11,"with_mode","","Set the playback mode of the player. Defaults to…",8,[[["playmode",4]]]],[11,"with_volume","","Set the playback volume of the player. Defaults to 1.0.",8,[[]]],[11,"play","","Build the ClipPlayer, and start playing the clip…",8,[[["clip",3]],[["audioerror",4],["result",4],["clipplayer",3]]]],[11,"paused","","Build the ClipPlayer in the paused state.…",8,[[["clip",3]],[["audioerror",4],["result",4],["clipplayer",3]]]],[0,"doctest","","DO NOT RELY ON THIS MODULE",null,null],[5,"simple","riddle_audio::doctest","",null,[[["fnonce",8]]]],[5,"pump_for_secs","","",null,[[["audiosystem",3]]]],[11,"from","riddle_audio","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",1,[[["commonerror",4]]]],[11,"clone","","",3,[[],["audiosystemhandle",3]]],[11,"clone","","",4,[[],["audiosystemweak",3]]],[11,"clone","","",6,[[],["clip",3]]],[11,"clone","","",0,[[],["playmode",4]]],[11,"deref","","",3,[[],["audiosystem",3]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"source","","",1,[[],[["error",8],["option",4]]]],[11,"clone_handle","","",5,[[],["audiosystemhandle",3]]],[11,"clone_weak_handle","","",5,[[],["audiosystemweak",3]]]],"p":[[4,"PlayMode"],[4,"AudioError"],[13,"InitFailed"],[3,"AudioSystemHandle"],[3,"AudioSystemWeak"],[3,"AudioSystem"],[3,"Clip"],[3,"ClipPlayer"],[3,"ClipPlayerBuilder"]]},\
"riddle_common":{"doc":"Riddle crate with miscelanious support functionality…","i":[[3,"Color","riddle_common","An RGBA color, parameterized over color channel type.",null,null],[12,"r","","Red",0,null],[12,"g","","Green",0,null],[12,"b","","Blue",0,null],[12,"a","","Alpha",0,null],[4,"CommonError","","Errors common to many riddle crates",null,null],[13,"IOError","","",1,null],[13,"Common","","",1,null],[18,"RED","","Opaque primary red",0,null],[18,"GREEN","","Opaque primary green",0,null],[18,"BLUE","","Opaque primary blue",0,null],[18,"BLACK","","Opaque black",0,null],[18,"WHITE","","Opaque white",0,null],[18,"TRANSPARENT_BLACK","","Transparent black",0,null],[18,"ZERO","","Transparent black",0,null],[11,"rgba","","Example",0,[[]]],[11,"rgb","","Example",0,[[]]],[0,"eventpub","","An event pubsub utility.",null,null],[3,"EventPub","riddle_common::eventpub","Event publisher which can have multiple subscribers.",null,null],[3,"EventSub","","An event subscriber which can filter incoming messages.",null,null],[11,"new","","Create a new event publisher.",2,[[]]],[11,"attach","","Attach a subscriber to the publisher.",2,[[["eventsub",3]]]],[11,"dispatch","","Send an event to all currently registered subscribers.",2,[[]]],[11,"subscription_count","","The current count of attached subscribers.",2,[[]]],[11,"new","","Create a new EventSub which accepts all events",3,[[]]],[11,"new_with_filter","","Create a new EventSub which applies a filter on incoming…",3,[[]]],[11,"collect","","Return all received events and clear the subscribers buffer.",3,[[],["vec",3]]],[8,"CloneHandle","riddle_common","Trait for objects that contain a weak reference to…",null,null],[16,"Handle","","The type which represents a strong reference, and which…",4,null],[16,"WeakHandle","","The type which represents a weak reference.",4,null],[10,"clone_handle","","Clone a strong handle to the object.",4,[[]]],[10,"clone_weak_handle","","Clone a weak handle to the object.",4,[[]]],[8,"ColorElement","","A type that represents a single channel in a color value.",null,null],[18,"ZERO","","",5,null],[18,"SATURATED","","",5,null],[8,"ColorElementConversion","","Define the mapping between two ColorElement types.",null,null],[10,"convert","","Given a value that implements this trait, produce an…",6,[[]]],[14,"define_handles","","Implement CloneHandle trait and define handle types for a…",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","riddle_common::eventpub","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"convert","riddle_common","",0,[[],["color",3]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",1,[[["error",8],["box",3]]]],[11,"clone","","",0,[[],["color",3]]],[11,"eq","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"source","","",1,[[],[["error",8],["option",4]]]],[18,"ZERO","","",5,null],[18,"SATURATED","","",5,null]],"p":[[3,"Color"],[4,"CommonError"],[3,"EventPub"],[3,"EventSub"],[8,"CloneHandle"],[8,"ColorElement"],[8,"ColorElementConversion"]]},\
"riddle_font":{"doc":"Riddle crate for loading font files and rendering text to…","i":[[3,"TTFont","riddle_font","Represents a parsed TTF file, and facilitates simple…",null,null],[4,"FontError","","",null,null],[13,"ImageError","","",0,null],[13,"FontParseFailed","","",0,null],[13,"CommonError","","",0,null],[11,"new","","Construct a new TTFont from a `Read` instance. The source…",1,[[["read",8]],[["fonterror",4],["result",4]]]],[11,"render_simple","","Render a string in this font to an image. It will only be…",1,[[],[["fonterror",4],["result",4],["image",3]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",0,[[["commonerror",4]]]],[11,"from","","",0,[[["imageerror",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"source","","",0,[[],[["error",8],["option",4]]]]],"p":[[4,"FontError"],[3,"TTFont"]]},\
"riddle_image":{"doc":"Riddle crate for loading and manipulating image data in…","i":[[3,"Color","riddle_image","An RGBA color, parameterized over color channel type.",null,null],[12,"r","","Red",0,null],[12,"g","","Green",0,null],[12,"b","","Blue",0,null],[12,"a","","Alpha",0,null],[3,"Image","","A representation of an image stored in main memory. The…",null,null],[4,"ImageError","","",null,null],[13,"Unknown","","",1,null],[13,"CommonError","","",1,null],[11,"new_from_png","","Load an image from a `Read + Seek` instance which emits…",2,[[["seek",8],["read",8]],[["imageerror",4],["result",4]]]],[11,"new","","Create a new image with the given dimensions, all pixels…",2,[[]]],[11,"get_pixel","","Get the color of the pixel at the given coordinates",2,[[],["color",3]]],[11,"set_pixel","","Set the color of the pixel at the given coordinates",2,[[["color",3],["colorelementconversion",8]]]],[11,"as_rgba8","","Borrow the bytes representing the entire image, encoded as…",2,[[]]],[11,"as_rgba8_mut","","Mutably borrow the bytes representing the entire image,…",2,[[]]],[11,"byte_count","","Get the byte count of the entire image encoded as RGBA8",2,[[]]],[11,"width","","Width of the image in pixels",2,[[]]],[11,"height","","Height of the image in pixels",2,[[]]],[11,"dimensions","","Dimension of the image in pixels",2,[[],["vector2",3]]],[11,"rect","","Get the bounding rect for the image, located at (0,0) and…",2,[[],["rect",3]]],[11,"blit","","Blit another image on to self. The location is the…",2,[[["vector2",3],["image",3]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",0,[[],["color",3]]],[11,"eq","","",0,[[["color",3]]]],[11,"convert","","",0,[[],["color",3]]],[11,"from","","",0,[[],["color",3]]],[11,"from","","",0,[[],["color",3]]],[11,"from","","",1,[[["commonerror",4]]]],[11,"from","","",1,[[["imageerror",4]]]],[11,"clone","","",2,[[],["image",3]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"source","","",1,[[],[["error",8],["option",4]]]],[18,"RED","","Opaque primary red",0,null],[18,"GREEN","","Opaque primary green",0,null],[18,"BLUE","","Opaque primary blue",0,null],[18,"BLACK","","Opaque black",0,null],[18,"WHITE","","Opaque white",0,null],[18,"TRANSPARENT_BLACK","","Transparent black",0,null],[18,"ZERO","","Transparent black",0,null],[11,"rgba","","Example",0,[[],["color",3]]],[11,"rgb","","Example",0,[[],["color",3]]]],"p":[[3,"Color"],[4,"ImageError"],[3,"Image"]]},\
"riddle_input":{"doc":"Riddle crate dealing with user input (keyboard, mouse,…","i":[[3,"LogicalPosition","riddle_input","A 2d position in logical screen units.",null,null],[12,"x","","",0,null],[12,"y","","",0,null],[4,"MouseButton","","Mouse button identifiers.",null,null],[13,"Left","","",1,null],[13,"Right","","",1,null],[13,"Middle","","",1,null],[13,"Other","","",1,null],[4,"Scancode","","Supported scancodes.",null,null],[13,"Unknown","","",2,null],[13,"Escape","","",2,null],[13,"One","","",2,null],[13,"Two","","",2,null],[13,"Three","","",2,null],[13,"Four","","",2,null],[13,"Five","","",2,null],[13,"Six","","",2,null],[13,"Seven","","",2,null],[13,"Eight","","",2,null],[13,"Nine","","",2,null],[13,"Zero","","",2,null],[13,"Minus","","",2,null],[13,"Equal","","",2,null],[13,"Backspace","","",2,null],[13,"Tab","","",2,null],[13,"Q","","",2,null],[13,"W","","",2,null],[13,"E","","",2,null],[13,"R","","",2,null],[13,"T","","",2,null],[13,"Y","","",2,null],[13,"U","","",2,null],[13,"I","","",2,null],[13,"O","","",2,null],[13,"P","","",2,null],[13,"LeftBrace","","",2,null],[13,"RightBrace","","",2,null],[13,"Enter","","",2,null],[13,"LeftControl","","",2,null],[13,"A","","",2,null],[13,"D","","",2,null],[13,"S","","",2,null],[13,"F","","",2,null],[13,"G","","",2,null],[13,"H","","",2,null],[13,"J","","",2,null],[13,"K","","",2,null],[13,"L","","",2,null],[13,"Semicolon","","",2,null],[13,"Apostrope","","",2,null],[13,"Grave","","",2,null],[13,"LeftShift","","",2,null],[13,"Backslash","","",2,null],[13,"Z","","",2,null],[13,"X","","",2,null],[13,"C","","",2,null],[13,"V","","",2,null],[13,"B","","",2,null],[13,"N","","",2,null],[13,"M","","",2,null],[13,"Comma","","",2,null],[13,"Dot","","",2,null],[13,"Slash","","",2,null],[13,"RightShift","","",2,null],[13,"KeyPadAsterick","","",2,null],[13,"LeftAlt","","",2,null],[13,"Space","","",2,null],[13,"CapsLock","","",2,null],[13,"F1","","",2,null],[13,"F2","","",2,null],[13,"F3","","",2,null],[13,"F4","","",2,null],[13,"F5","","",2,null],[13,"F6","","",2,null],[13,"F7","","",2,null],[13,"F8","","",2,null],[13,"F9","","",2,null],[13,"F10","","",2,null],[13,"NumLock","","",2,null],[13,"ScrollLock","","",2,null],[13,"KeyPad7","","",2,null],[13,"KeyPad8","","",2,null],[13,"KeyPad9","","",2,null],[13,"KeyPadMinus","","",2,null],[13,"KeyPad4","","",2,null],[13,"KeyPad5","","",2,null],[13,"KeyPad6","","",2,null],[13,"KeyPadPlus","","",2,null],[13,"KeyPad1","","",2,null],[13,"KeyPad2","","",2,null],[13,"KeyPad3","","",2,null],[13,"KeyPad0","","",2,null],[13,"KeyPadDot","","",2,null],[13,"NonUSBackslash","","",2,null],[13,"F11","","",2,null],[13,"F12","","",2,null],[13,"KeyPadEnter","","",2,null],[13,"RightAlt","","",2,null],[13,"Home","","",2,null],[13,"Up","","",2,null],[13,"PageUp","","",2,null],[13,"Left","","",2,null],[13,"Right","","",2,null],[13,"End","","",2,null],[13,"Down","","",2,null],[13,"PageDown","","",2,null],[13,"Insert","","",2,null],[13,"Delete","","",2,null],[13,"KeyPadEqual","","",2,null],[13,"KeyPadPlusMinus","","",2,null],[4,"VirtualKey","","Supported virtual keys.",null,null],[13,"Unknown","","",3,null],[13,"Escape","","",3,null],[13,"One","","",3,null],[13,"Two","","",3,null],[13,"Three","","",3,null],[13,"Four","","",3,null],[13,"Five","","",3,null],[13,"Six","","",3,null],[13,"Seven","","",3,null],[13,"Eight","","",3,null],[13,"Nine","","",3,null],[13,"Zero","","",3,null],[13,"Minus","","",3,null],[13,"Equal","","",3,null],[13,"Backspace","","",3,null],[13,"Tab","","",3,null],[13,"Q","","",3,null],[13,"W","","",3,null],[13,"E","","",3,null],[13,"R","","",3,null],[13,"T","","",3,null],[13,"Y","","",3,null],[13,"U","","",3,null],[13,"I","","",3,null],[13,"O","","",3,null],[13,"P","","",3,null],[13,"LeftBrace","","",3,null],[13,"RightBrace","","",3,null],[13,"Enter","","",3,null],[13,"LeftControl","","",3,null],[13,"A","","",3,null],[13,"D","","",3,null],[13,"S","","",3,null],[13,"F","","",3,null],[13,"G","","",3,null],[13,"H","","",3,null],[13,"J","","",3,null],[13,"K","","",3,null],[13,"L","","",3,null],[13,"Semicolon","","",3,null],[13,"Apostrope","","",3,null],[13,"Grave","","",3,null],[13,"LeftShift","","",3,null],[13,"Backslash","","",3,null],[13,"Z","","",3,null],[13,"X","","",3,null],[13,"C","","",3,null],[13,"V","","",3,null],[13,"B","","",3,null],[13,"N","","",3,null],[13,"M","","",3,null],[13,"Comma","","",3,null],[13,"Dot","","",3,null],[13,"Slash","","",3,null],[13,"RightShift","","",3,null],[13,"KeyPadAsterick","","",3,null],[13,"LeftAlt","","",3,null],[13,"Space","","",3,null],[13,"CapsLock","","",3,null],[13,"F1","","",3,null],[13,"F2","","",3,null],[13,"F3","","",3,null],[13,"F4","","",3,null],[13,"F5","","",3,null],[13,"F6","","",3,null],[13,"F7","","",3,null],[13,"F8","","",3,null],[13,"F9","","",3,null],[13,"F10","","",3,null],[13,"NumLock","","",3,null],[13,"ScrollLock","","",3,null],[13,"KeyPad7","","",3,null],[13,"KeyPad8","","",3,null],[13,"KeyPad9","","",3,null],[13,"KeyPadMinus","","",3,null],[13,"KeyPad4","","",3,null],[13,"KeyPad5","","",3,null],[13,"KeyPad6","","",3,null],[13,"KeyPadPlus","","",3,null],[13,"KeyPad1","","",3,null],[13,"KeyPad2","","",3,null],[13,"KeyPad3","","",3,null],[13,"KeyPad0","","",3,null],[13,"KeyPadDot","","",3,null],[13,"NonUSBackslash","","",3,null],[13,"F11","","",3,null],[13,"F12","","",3,null],[13,"KeyPadEnter","","",3,null],[13,"RightAlt","","",3,null],[13,"Home","","",3,null],[13,"Up","","",3,null],[13,"PageUp","","",3,null],[13,"Left","","",3,null],[13,"Right","","",3,null],[13,"End","","",3,null],[13,"Down","","",3,null],[13,"PageDown","","",3,null],[13,"Insert","","",3,null],[13,"Delete","","",3,null],[13,"KeyPadEqual","","",3,null],[13,"KeyPadPlusMinus","","",3,null],[3,"GamePadId","","An identifier mapping to a particular gamepad, used for…",null,null],[3,"InputSystem","","The Riddle input system core state, along with…",null,null],[3,"InputSystemHandle","","",null,null],[3,"InputSystemWeak","","",null,null],[3,"InputMainThreadState","","The portion of the input system that needs to remain on a…",null,null],[3,"KeyboardModifiers","","A snapshot of which keyboard modifiers are currently…",null,null],[12,"shift","","",4,null],[12,"ctrl","","",4,null],[12,"alt","","",4,null],[4,"InputError","","",null,null],[13,"InitError","","",5,null],[13,"Unknown","","",5,null],[4,"InputEvent","","",null,null],[13,"CursorMove","","",6,null],[12,"window","riddle_input::InputEvent","",7,null],[12,"position","","",7,null],[13,"MouseButtonDown","riddle_input","",6,null],[12,"window","riddle_input::InputEvent","",8,null],[12,"button","","",8,null],[13,"MouseButtonUp","riddle_input","",6,null],[12,"window","riddle_input::InputEvent","",9,null],[12,"button","","",9,null],[13,"KeyDown","riddle_input","",6,null],[12,"window","riddle_input::InputEvent","",10,null],[12,"scancode","","",10,null],[12,"vkey","","",10,null],[12,"modifiers","","",10,null],[13,"KeyUp","riddle_input","",6,null],[12,"window","riddle_input::InputEvent","",11,null],[12,"scancode","","",11,null],[12,"vkey","","",11,null],[12,"modifiers","","",11,null],[13,"GamePadConnected","riddle_input","",6,null],[13,"GamePadDisconnected","","",6,null],[13,"GamePadButtonDown","","",6,null],[12,"gamepad","riddle_input::InputEvent","",12,null],[12,"button","","",12,null],[13,"GamePadButtonUp","riddle_input","",6,null],[12,"gamepad","riddle_input::InputEvent","",13,null],[12,"button","","",13,null],[13,"GamePadAxisChanged","riddle_input","",6,null],[12,"gamepad","riddle_input::InputEvent","",14,null],[12,"axis","","",14,null],[12,"value","","",14,null],[4,"GamePadButton","riddle_input","GamePad Button identifiers.",null,null],[13,"South","","",15,null],[13,"North","","",15,null],[13,"East","","",15,null],[13,"West","","",15,null],[13,"DPadUp","","",15,null],[13,"DPadDown","","",15,null],[13,"DPadLeft","","",15,null],[13,"DPadRight","","",15,null],[13,"LeftStick","","",15,null],[13,"RightStick","","",15,null],[13,"LeftShoulder","","",15,null],[13,"RightShoulder","","",15,null],[13,"LeftTrigger","","",15,null],[13,"RightTrigger","","",15,null],[13,"Start","","",15,null],[13,"Back","","",15,null],[4,"GamePadAxis","","GamePad axis identifiers.",null,null],[13,"LeftStickX","","",16,null],[13,"LeftStickY","","",16,null],[13,"RightStickX","","",16,null],[13,"RightStickY","","",16,null],[11,"downgrade","","Downgrade this handle to a weak handle",17,[[["inputsystemhandle",3]],["inputsystemweak",3]]],[11,"eq","","Test whether two handles point to the same location in…",17,[[["inputsystemhandle",3]]]],[11,"upgrade","","Upgrade a weak handle to a strong handle. Returns None if…",18,[[["inputsystemweak",3]],[["option",4],["inputsystemhandle",3]]]],[11,"new","","Create the input system, initializing any input device…",19,[[["eventpub",3]],[["inputerror",4],["result",4]]]],[11,"take_input_events","","Collect any buffered [`InputEvent`]s emitted by the input…",19,[[],[["inputevent",4],["vec",3]]]],[11,"mouse_pos","","Query the cursor position with respect to a given window.",19,[[["windowid",3]],["logicalposition",3]]],[11,"is_key_down","","Query the keyboard scancode state with respect to a given…",19,[[["windowid",3],["scancode",4]]]],[11,"is_vkey_down","","Query the keyboard virtual key state with respect to a…",19,[[["windowid",3],["virtualkey",4]]]],[11,"keyboard_modifiers","","The current state of keyboard modifiers with respect to a…",19,[[["windowid",3]],["keyboardmodifiers",3]]],[11,"is_gamepad_button_down","","Check if a specific button is pressed for a given gamepad.",19,[[["gamepadid",3],["gamepadbutton",4]]]],[11,"process_input","","Process all input sources, updating the static view of the…",20,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"fmt","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",1,[[],["mousebutton",4]]],[11,"clone","","",0,[[],["logicalposition",3]]],[11,"clone","","",2,[[],["scancode",4]]],[11,"clone","","",3,[[],["virtualkey",4]]],[11,"eq","","",2,[[["scancode",4]]]],[11,"eq","","",3,[[["virtualkey",4]]]],[11,"eq","","",1,[[["mousebutton",4]]]],[11,"ne","","",1,[[["mousebutton",4]]]],[11,"eq","","",0,[[["logicalposition",3]]]],[11,"ne","","",0,[[["logicalposition",3]]]],[11,"hash","","",1,[[]]],[11,"from","","",0,[[["logicalvec2",3]],["logicalposition",3]]],[11,"from","","",0,[[["vector2",3]],["logicalposition",3]]],[11,"from","","",2,[[],["scancode",4]]],[11,"default","","",0,[[],["logicalposition",3]]],[11,"from","","",21,[[["gamepadid",3]]]],[11,"clone","","",6,[[],["inputevent",4]]],[11,"clone","","",21,[[],["gamepadid",3]]],[11,"clone","","",15,[[],["gamepadbutton",4]]],[11,"clone","","",16,[[],["gamepadaxis",4]]],[11,"clone","","",17,[[],["inputsystemhandle",3]]],[11,"clone","","",18,[[],["inputsystemweak",3]]],[11,"clone","","",4,[[],["keyboardmodifiers",3]]],[11,"eq","","",6,[[["inputevent",4]]]],[11,"ne","","",6,[[["inputevent",4]]]],[11,"eq","","",21,[[["gamepadid",3]]]],[11,"ne","","",21,[[["gamepadid",3]]]],[11,"eq","","",15,[[["gamepadbutton",4]]]],[11,"eq","","",16,[[["gamepadaxis",4]]]],[11,"eq","","",4,[[["keyboardmodifiers",3]]]],[11,"ne","","",4,[[["keyboardmodifiers",3]]]],[11,"deref","","",17,[[],["inputsystem",3]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"hash","","",21,[[]]],[11,"hash","","",15,[[]]],[11,"hash","","",16,[[]]],[11,"try_from","","",15,[[["button",4]],[["button",4],["result",4]]]],[11,"try_from","","",16,[[["axis",4]],[["axis",4],["result",4]]]],[11,"clone_handle","","",19,[[],["inputsystemhandle",3]]],[11,"clone_weak_handle","","",19,[[],["inputsystemweak",3]]],[11,"into_physical","","Convert the position from logical units to physical pixel…",0,[[]]]],"p":[[3,"LogicalPosition"],[4,"MouseButton"],[4,"Scancode"],[4,"VirtualKey"],[3,"KeyboardModifiers"],[4,"InputError"],[4,"InputEvent"],[13,"CursorMove"],[13,"MouseButtonDown"],[13,"MouseButtonUp"],[13,"KeyDown"],[13,"KeyUp"],[13,"GamePadButtonDown"],[13,"GamePadButtonUp"],[13,"GamePadAxisChanged"],[4,"GamePadButton"],[4,"GamePadAxis"],[3,"InputSystemHandle"],[3,"InputSystemWeak"],[3,"InputSystem"],[3,"InputMainThreadState"],[3,"GamePadId"]]},\
"riddle_math":{"doc":"Riddle crate supplying basic math types and utilities to…","i":[[3,"Rect","riddle_math","An axis aligned 2d rectangle with both a location and size.",null,null],[12,"location","","The coordinates of the min point of the rectangle.",0,null],[12,"dimensions","","The size of the rectangle",0,null],[3,"Vector2","","A basic 2d vector, supporting a small selection of…",null,null],[12,"x","","",1,null],[12,"y","","",1,null],[5,"vec2","","Utility function to abbreviate [`Vector2`] creation",null,[[],["vector2",3]]],[11,"new","","Create a new rect",0,[[["vector2",3],["into",8]]]],[11,"min_point","","Get the min point of the rect, the same as its location",0,[[],["vector2",3]]],[11,"max_point","","Get the max point of the rect",0,[[],["vector2",3]]],[11,"intersect","","Get the intersection rect of two rectangles, if one exists",0,[[],["option",4]]],[11,"contains_point","","Test to see whether a point lies within the rect.",0,[[["vector2",3]]]],[11,"intersect_relative_to_both","","Given the dimensions of two rects, and the relative offset…",0,[[["spacialnumericconversion",8],["vector2",3],["vector2",3]],["option",4]]],[11,"new","","Create a vector with the given coordinatates.",1,[[]]],[8,"SpacialNumeric","","Numeric types over which [`crate::Rect`] and…",null,null],[8,"SignedSpacialNumeric","","Types which as well as being defined as SpacialNumeric,…",null,null],[8,"SpacialNumericConversion","","Define the conversion between two SpacialNumeric types.",null,null],[10,"convert","","Convert one SpacialNumeric value to another. This…",2,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"convert","","",0,[[],["rect",3]]],[11,"convert","","",1,[[],["vector2",3]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[["vector2",3]]]],[11,"from","","",1,[[["vec2",3]]]],[11,"into","","",1,[[],["vector2",3]]],[11,"clone","","",0,[[],["rect",3]]],[11,"clone","","",1,[[],["vector2",3]]],[11,"default","","",1,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",1,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"sub","","",1,[[["vector2",3]]]],[11,"add","","",1,[[["vector2",3]]]],[11,"mul","","",1,[[]]],[11,"neg","","",1,[[]]],[11,"add_assign","","",1,[[["vector2",3]]]],[11,"sub_assign","","",1,[[["vector2",3]]]]],"p":[[3,"Rect"],[3,"Vector2"],[8,"SpacialNumericConversion"]]},\
"riddle_platform_common":{"doc":"Riddle crate containing common utilities and types needed…","i":[[3,"LogicalSize","riddle_platform_common","A 2d size in logical screen units.",null,null],[12,"width","","",0,null],[12,"height","","",0,null],[3,"LogicalPosition","","A 2d position in logical screen units.",null,null],[12,"x","","",1,null],[12,"y","","",1,null],[3,"LogicalVec2","","A 2d vector in logical screen units.",null,null],[12,"x","","",2,null],[12,"y","","",2,null],[3,"WindowId","","A platform system independent window identifier.",null,null],[4,"PlatformEvent","","",null,null],[13,"WindowClose","","",3,null],[13,"WindowResize","","",3,null],[13,"CursorMove","","",3,null],[12,"window","riddle_platform_common::PlatformEvent","",4,null],[12,"position","","",4,null],[13,"MouseButtonDown","riddle_platform_common","",3,null],[12,"window","riddle_platform_common::PlatformEvent","",5,null],[12,"button","","",5,null],[13,"MouseButtonUp","riddle_platform_common","",3,null],[12,"window","riddle_platform_common::PlatformEvent","",6,null],[12,"button","","",6,null],[13,"KeyDown","riddle_platform_common","",3,null],[12,"window","riddle_platform_common::PlatformEvent","",7,null],[12,"platform_scancode","","",7,null],[12,"scancode","","",7,null],[12,"vkey","","",7,null],[13,"KeyUp","riddle_platform_common","",3,null],[12,"window","riddle_platform_common::PlatformEvent","",8,null],[12,"platform_scancode","","",8,null],[12,"scancode","","",8,null],[12,"vkey","","",8,null],[13,"EventQueueEmpty","riddle_platform_common","",3,null],[13,"Unknown","","",3,null],[4,"MouseButton","","Mouse button identifiers.",null,null],[13,"Left","","",9,null],[13,"Right","","",9,null],[13,"Middle","","",9,null],[13,"Other","","",9,null],[4,"Scancode","","Supported scancodes.",null,null],[13,"Unknown","","",10,null],[13,"Escape","","",10,null],[13,"One","","",10,null],[13,"Two","","",10,null],[13,"Three","","",10,null],[13,"Four","","",10,null],[13,"Five","","",10,null],[13,"Six","","",10,null],[13,"Seven","","",10,null],[13,"Eight","","",10,null],[13,"Nine","","",10,null],[13,"Zero","","",10,null],[13,"Minus","","",10,null],[13,"Equal","","",10,null],[13,"Backspace","","",10,null],[13,"Tab","","",10,null],[13,"Q","","",10,null],[13,"W","","",10,null],[13,"E","","",10,null],[13,"R","","",10,null],[13,"T","","",10,null],[13,"Y","","",10,null],[13,"U","","",10,null],[13,"I","","",10,null],[13,"O","","",10,null],[13,"P","","",10,null],[13,"LeftBrace","","",10,null],[13,"RightBrace","","",10,null],[13,"Enter","","",10,null],[13,"LeftControl","","",10,null],[13,"A","","",10,null],[13,"D","","",10,null],[13,"S","","",10,null],[13,"F","","",10,null],[13,"G","","",10,null],[13,"H","","",10,null],[13,"J","","",10,null],[13,"K","","",10,null],[13,"L","","",10,null],[13,"Semicolon","","",10,null],[13,"Apostrope","","",10,null],[13,"Grave","","",10,null],[13,"LeftShift","","",10,null],[13,"Backslash","","",10,null],[13,"Z","","",10,null],[13,"X","","",10,null],[13,"C","","",10,null],[13,"V","","",10,null],[13,"B","","",10,null],[13,"N","","",10,null],[13,"M","","",10,null],[13,"Comma","","",10,null],[13,"Dot","","",10,null],[13,"Slash","","",10,null],[13,"RightShift","","",10,null],[13,"KeyPadAsterick","","",10,null],[13,"LeftAlt","","",10,null],[13,"Space","","",10,null],[13,"CapsLock","","",10,null],[13,"F1","","",10,null],[13,"F2","","",10,null],[13,"F3","","",10,null],[13,"F4","","",10,null],[13,"F5","","",10,null],[13,"F6","","",10,null],[13,"F7","","",10,null],[13,"F8","","",10,null],[13,"F9","","",10,null],[13,"F10","","",10,null],[13,"NumLock","","",10,null],[13,"ScrollLock","","",10,null],[13,"KeyPad7","","",10,null],[13,"KeyPad8","","",10,null],[13,"KeyPad9","","",10,null],[13,"KeyPadMinus","","",10,null],[13,"KeyPad4","","",10,null],[13,"KeyPad5","","",10,null],[13,"KeyPad6","","",10,null],[13,"KeyPadPlus","","",10,null],[13,"KeyPad1","","",10,null],[13,"KeyPad2","","",10,null],[13,"KeyPad3","","",10,null],[13,"KeyPad0","","",10,null],[13,"KeyPadDot","","",10,null],[13,"NonUSBackslash","","",10,null],[13,"F11","","",10,null],[13,"F12","","",10,null],[13,"KeyPadEnter","","",10,null],[13,"RightAlt","","",10,null],[13,"Home","","",10,null],[13,"Up","","",10,null],[13,"PageUp","","",10,null],[13,"Left","","",10,null],[13,"Right","","",10,null],[13,"End","","",10,null],[13,"Down","","",10,null],[13,"PageDown","","",10,null],[13,"Insert","","",10,null],[13,"Delete","","",10,null],[13,"KeyPadEqual","","",10,null],[13,"KeyPadPlusMinus","","",10,null],[4,"VirtualKey","","Supported virtual keys.",null,null],[13,"Unknown","","",11,null],[13,"Escape","","",11,null],[13,"One","","",11,null],[13,"Two","","",11,null],[13,"Three","","",11,null],[13,"Four","","",11,null],[13,"Five","","",11,null],[13,"Six","","",11,null],[13,"Seven","","",11,null],[13,"Eight","","",11,null],[13,"Nine","","",11,null],[13,"Zero","","",11,null],[13,"Minus","","",11,null],[13,"Equal","","",11,null],[13,"Backspace","","",11,null],[13,"Tab","","",11,null],[13,"Q","","",11,null],[13,"W","","",11,null],[13,"E","","",11,null],[13,"R","","",11,null],[13,"T","","",11,null],[13,"Y","","",11,null],[13,"U","","",11,null],[13,"I","","",11,null],[13,"O","","",11,null],[13,"P","","",11,null],[13,"LeftBrace","","",11,null],[13,"RightBrace","","",11,null],[13,"Enter","","",11,null],[13,"LeftControl","","",11,null],[13,"A","","",11,null],[13,"D","","",11,null],[13,"S","","",11,null],[13,"F","","",11,null],[13,"G","","",11,null],[13,"H","","",11,null],[13,"J","","",11,null],[13,"K","","",11,null],[13,"L","","",11,null],[13,"Semicolon","","",11,null],[13,"Apostrope","","",11,null],[13,"Grave","","",11,null],[13,"LeftShift","","",11,null],[13,"Backslash","","",11,null],[13,"Z","","",11,null],[13,"X","","",11,null],[13,"C","","",11,null],[13,"V","","",11,null],[13,"B","","",11,null],[13,"N","","",11,null],[13,"M","","",11,null],[13,"Comma","","",11,null],[13,"Dot","","",11,null],[13,"Slash","","",11,null],[13,"RightShift","","",11,null],[13,"KeyPadAsterick","","",11,null],[13,"LeftAlt","","",11,null],[13,"Space","","",11,null],[13,"CapsLock","","",11,null],[13,"F1","","",11,null],[13,"F2","","",11,null],[13,"F3","","",11,null],[13,"F4","","",11,null],[13,"F5","","",11,null],[13,"F6","","",11,null],[13,"F7","","",11,null],[13,"F8","","",11,null],[13,"F9","","",11,null],[13,"F10","","",11,null],[13,"NumLock","","",11,null],[13,"ScrollLock","","",11,null],[13,"KeyPad7","","",11,null],[13,"KeyPad8","","",11,null],[13,"KeyPad9","","",11,null],[13,"KeyPadMinus","","",11,null],[13,"KeyPad4","","",11,null],[13,"KeyPad5","","",11,null],[13,"KeyPad6","","",11,null],[13,"KeyPadPlus","","",11,null],[13,"KeyPad1","","",11,null],[13,"KeyPad2","","",11,null],[13,"KeyPad3","","",11,null],[13,"KeyPad0","","",11,null],[13,"KeyPadDot","","",11,null],[13,"NonUSBackslash","","",11,null],[13,"F11","","",11,null],[13,"F12","","",11,null],[13,"KeyPadEnter","","",11,null],[13,"RightAlt","","",11,null],[13,"Home","","",11,null],[13,"Up","","",11,null],[13,"PageUp","","",11,null],[13,"Left","","",11,null],[13,"Right","","",11,null],[13,"End","","",11,null],[13,"Down","","",11,null],[13,"PageDown","","",11,null],[13,"Insert","","",11,null],[13,"Delete","","",11,null],[13,"KeyPadEqual","","",11,null],[13,"KeyPadPlusMinus","","",11,null],[11,"into_physical","","Convert the size from logical units to physical pixel…",0,[[]]],[11,"into_physical","","Convert the position from logical units to physical pixel…",1,[[]]],[11,"into_physical","","Convert the vector from logical units to physical pixel…",2,[[]]],[11,"new","","",12,[[]]],[0,"doctest","","DO NOT RELY ON THIS MODULE",null,null],[3,"MockWindow","riddle_platform_common::doctest","",null,null],[0,"traits","riddle_platform_common","Traits needed in order to implement a riddle compatible…",null,null],[8,"WindowExt","riddle_platform_common::traits","Functionality Window types need in order to be able to…",null,null],[10,"logical_to_physical","","Convert a logical vec2 in to a physical pixel unit (x,y)…",13,[[["logicalvec2",3],["into",8]]]],[11,"from","riddle_platform_common","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","riddle_platform_common::doctest","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"logical_to_physical","","",14,[[["logicalvec2",3],["into",8]]]],[11,"from","riddle_platform_common","",0,[[["logicalvec2",3]]]],[11,"from","","",0,[[["vector2",3]]]],[11,"from","","",1,[[["logicalvec2",3]]]],[11,"from","","",1,[[["vector2",3]]]],[11,"from","","",2,[[["logicalsize",3]]]],[11,"from","","",2,[[["logicalposition",3]]]],[11,"from","","",2,[[["vector2",3]]]],[11,"from","","",10,[[]]],[11,"clone","","",0,[[],["logicalsize",3]]],[11,"clone","","",1,[[],["logicalposition",3]]],[11,"clone","","",2,[[],["logicalvec2",3]]],[11,"clone","","",3,[[],["platformevent",4]]],[11,"clone","","",9,[[],["mousebutton",4]]],[11,"clone","","",10,[[],["scancode",4]]],[11,"clone","","",11,[[],["virtualkey",4]]],[11,"clone","","",12,[[],["windowid",3]]],[11,"default","","",1,[[]]],[11,"eq","","",0,[[["logicalsize",3]]]],[11,"ne","","",0,[[["logicalsize",3]]]],[11,"eq","","",1,[[["logicalposition",3]]]],[11,"ne","","",1,[[["logicalposition",3]]]],[11,"eq","","",2,[[["logicalvec2",3]]]],[11,"ne","","",2,[[["logicalvec2",3]]]],[11,"eq","","",3,[[["platformevent",4]]]],[11,"ne","","",3,[[["platformevent",4]]]],[11,"eq","","",9,[[["mousebutton",4]]]],[11,"ne","","",9,[[["mousebutton",4]]]],[11,"eq","","",10,[[["scancode",4]]]],[11,"eq","","",11,[[["virtualkey",4]]]],[11,"eq","","",12,[[["windowid",3]]]],[11,"ne","","",12,[[["windowid",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"hash","","",9,[[]]],[11,"hash","","",12,[[]]]],"p":[[3,"LogicalSize"],[3,"LogicalPosition"],[3,"LogicalVec2"],[4,"PlatformEvent"],[13,"CursorMove"],[13,"MouseButtonDown"],[13,"MouseButtonUp"],[13,"KeyDown"],[13,"KeyUp"],[4,"MouseButton"],[4,"Scancode"],[4,"VirtualKey"],[3,"WindowId"],[8,"WindowExt"],[3,"MockWindow"]]},\
"riddle_platform_winit":{"doc":"Riddle platform system implementation based on `winit`,…","i":[[4,"PlatformEvent","riddle_platform_winit","",null,null],[13,"WindowClose","","",0,null],[13,"WindowResize","","",0,null],[13,"CursorMove","","",0,null],[12,"window","riddle_platform_winit::PlatformEvent","",1,null],[12,"position","","",1,null],[13,"MouseButtonDown","riddle_platform_winit","",0,null],[12,"window","riddle_platform_winit::PlatformEvent","",2,null],[12,"button","","",2,null],[13,"MouseButtonUp","riddle_platform_winit","",0,null],[12,"window","riddle_platform_winit::PlatformEvent","",3,null],[12,"button","","",3,null],[13,"KeyDown","riddle_platform_winit","",0,null],[12,"window","riddle_platform_winit::PlatformEvent","",4,null],[12,"platform_scancode","","",4,null],[12,"scancode","","",4,null],[12,"vkey","","",4,null],[13,"KeyUp","riddle_platform_winit","",0,null],[12,"window","riddle_platform_winit::PlatformEvent","",5,null],[12,"platform_scancode","","",5,null],[12,"scancode","","",5,null],[12,"vkey","","",5,null],[13,"EventQueueEmpty","riddle_platform_winit","",0,null],[13,"Unknown","","",0,null],[3,"PlatformContext","","The platform system context provided to the application…",null,null],[3,"PlatformSystem","","The winit platform system core state, along with…",null,null],[3,"PlatformSystemHandle","","",null,null],[3,"PlatformSystemWeak","","",null,null],[3,"PlatformMainThreadState","","",null,null],[3,"Window","","A platform native window.",null,null],[3,"WindowHandle","","",null,null],[3,"WindowWeak","","",null,null],[3,"WindowBuilder","","Builder for [`Window`] instances.",null,null],[4,"PlatformError","","",null,null],[13,"MessageDispatchError","","",6,null],[13,"InvalidContextState","","",6,null],[13,"WindowInitFailure","","",6,null],[13,"Unknown","","",6,null],[11,"quit","","Issue a quit request to the underlying platform system.",7,[[],[["platformerror",4],["result",4]]]],[11,"event","","Get the event associated with the context.",7,[[],["platformevent",4]]],[11,"system","","The platform system associated with this context.",7,[[],["platformsystem",3]]],[11,"downgrade","","Downgrade this handle to a weak handle",8,[[["platformsystemhandle",3]],["platformsystemweak",3]]],[11,"eq","","Test whether two handles point to the same location in…",8,[[["platformsystemhandle",3]]]],[11,"upgrade","","Upgrade a weak handle to a strong handle. Returns None if…",9,[[["platformsystemweak",3]],[["platformsystemhandle",3],["option",4]]]],[11,"new","","Create a new platform system and its main thread state pair.",10,[[]]],[11,"event_pub","","Get the [`PlatformEvent`] publisher, so that other systems…",10,[[],["eventpub",3]]],[11,"lookup_window","","Get a [`WindowHandle`] associated with a [`WindowId`], if…",10,[[["windowid",3]],[["windowhandle",3],["option",4]]]],[11,"run","","Starts the main even loop for this window system.",11,[[]]],[11,"borrow_context","","",11,[[],["platformcontext",3]]],[11,"downgrade","","Downgrade this handle to a weak handle",12,[[["windowhandle",3]],["windowweak",3]]],[11,"eq","","Test whether two handles point to the same location in…",12,[[["windowhandle",3]]]],[11,"upgrade","","Upgrade a weak handle to a strong handle. Returns None if…",13,[[["windowweak",3]],[["windowhandle",3],["option",4]]]],[11,"physical_size","","Get the size of the drawable area of the window in pixels",14,[[]]],[11,"logical_size","","Get the size of the drawable area of the window in logical…",14,[[],["logicalsize",3]]],[11,"scale_factor","","Get the scale factor of the window, based on how the…",14,[[]]],[11,"set_title","","Set the window title",14,[[]]],[11,"subscribe_to_events","","Attach a subscriber to the subset of platform events that…",14,[[["eventsub",3]]]],[11,"id","","The window id which is used to identify this window in…",14,[[],["windowid",3]]],[11,"new","","",15,[[]]],[11,"dimensions","","Set the dimensions of the window, in logical units.",15,[[]]],[11,"resizeable","","Set whether the window is resizeable.",15,[[]]],[11,"title","","Set the window\'s title.",15,[[["into",8],["string",3]]]],[11,"cursor_visible","","Set whether the system cursor will be displayed for the…",15,[[]]],[11,"build","","Build the new window, returning a handle to the new window.",15,[[],[["windowhandle",3],["result",4],["platformerror",4]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"clone","","",0,[[],["platformevent",4]]],[11,"eq","","",0,[[["platformevent",4]]]],[11,"ne","","",0,[[["platformevent",4]]]],[11,"drop","","",14,[[]]],[11,"clone","","",8,[[],["platformsystemhandle",3]]],[11,"clone","","",9,[[],["platformsystemweak",3]]],[11,"clone","","",12,[[],["windowhandle",3]]],[11,"clone","","",13,[[],["windowweak",3]]],[11,"default","","",15,[[]]],[11,"eq","","",14,[[]]],[11,"deref","","",8,[[],["platformsystem",3]]],[11,"deref","","",12,[[],["window",3]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"clone_handle","","",10,[[],["platformsystemhandle",3]]],[11,"clone_weak_handle","","",10,[[],["platformsystemweak",3]]],[11,"clone_handle","","",14,[[],["windowhandle",3]]],[11,"clone_weak_handle","","",14,[[],["windowweak",3]]],[11,"raw_window_handle","","",14,[[],["rawwindowhandle",4]]],[11,"logical_to_physical","","",14,[[["into",8],["logicalvec2",3]]]]],"p":[[4,"PlatformEvent"],[13,"CursorMove"],[13,"MouseButtonDown"],[13,"MouseButtonUp"],[13,"KeyDown"],[13,"KeyUp"],[4,"PlatformError"],[3,"PlatformContext"],[3,"PlatformSystemHandle"],[3,"PlatformSystemWeak"],[3,"PlatformSystem"],[3,"PlatformMainThreadState"],[3,"WindowHandle"],[3,"WindowWeak"],[3,"Window"],[3,"WindowBuilder"]]},\
"riddle_renderer_wgpu":{"doc":"Riddle simple sprite-based renderer built on `wgpu`.","i":[[3,"Renderer","riddle_renderer_wgpu","A simple 2D sprite based renderer.",null,null],[3,"RendererHandle","","",null,null],[3,"RendererWeak","","",null,null],[3,"Sprite","","A renderable region of a texture.",null,null],[3,"SpriteRenderCommand","","Builder for a [`Sprite`] render call",null,null],[3,"SpriteBuilder","","Builder to construct new [`Sprite`]s from…",null,null],[3,"SpriteAtlasBuilder","","Construct a set of [`Sprite`]s from a set of…",null,null],[3,"SpriteRenderTarget","","A target which can be both rendered to and referenced as a…",null,null],[4,"RendererError","","",null,null],[13,"APIInitError","","",0,null],[13,"BeginRenderError","","",0,null],[13,"ImageError","","",0,null],[13,"CommonError","","",0,null],[13,"Unknown","","",0,null],[4,"FilterMode","","Interpolation mode between texels when rendering",null,null],[13,"Nearest","","",1,null],[13,"Linear","","",1,null],[11,"downgrade","","Downgrade this handle to a weak handle",2,[[["rendererhandle",3]],["rendererweak",3]]],[11,"eq","","Test whether two handles point to the same location in…",2,[[["rendererhandle",3]]]],[11,"upgrade","","Upgrade a weak handle to a strong handle. Returns None if…",3,[[["rendererweak",3]],[["option",4],["rendererhandle",3]]]],[11,"new_from_window","","Initialize a new Renderer, creating a WGPU device for the…",4,[[["window",3]],[["renderererror",4],["result",4],["rendererhandle",3]]]],[11,"dimensions","","Get the frame dimensions as reported by the…",4,[[],["vector2",3]]],[11,"begin_render","","Get a render context for the current swap chain frame.",4,[[],[["renderererror",4],["result",4]]]],[11,"subsprite","","Build a sprite that shares the same underlying texture but…",5,[[["rect",3]],["sprite",3]]],[11,"render_at","","Utility function to simply render the sprite at a given…",5,[[["into",8],["vector2",3]],[["renderererror",4],["result",4]]]],[11,"dimensions","","Get the dimensions of the sprite",5,[[],["vector2",3]]],[11,"new","","New render command with default args, at the specified…",6,[[["into",8],["vector2",3]]]],[11,"at","","Set the location of the sprite, specifying where the pivot…",6,[[["into",8],["vector2",3]]]],[11,"with_pivot","","Set the pivot of the sprite, relative to the top left of…",6,[[["into",8],["vector2",3]]]],[11,"with_scale","","Set the scale at which the sprite will be rendered",6,[[["into",8],["vector2",3]]]],[11,"with_angle","","Set the angle at which the sprite will be rendered, in…",6,[[]]],[11,"with_color","","Set the diffuse color of the sprite, which will be…",6,[[["color",3]]]],[11,"render","","Invoke the render command, for the given sprite, in the…",6,[[["sprite",3]],[["renderererror",4],["result",4]]]],[11,"new","","Create a new builder for the given image",7,[[["image",3]]]],[11,"with_filter_modes","","Specify the min and mag filters used when rendering the…",7,[[["filtermode",4]]]],[11,"build","","Build the sprite for the given renderer",7,[[["renderer",3]],[["sprite",3],["result",4],["renderererror",4]]]],[11,"new","","A new empty atlas builder",8,[[]]],[11,"with_image","","Add an image to be packed in to the atlas, along with a…",8,[[["option",4],["image",3]]]],[11,"with_filter_modes","","Specify the min and mag filters used when rendering the…",8,[[["filtermode",4]]]],[11,"build","","Construct the atlas texture from the given set of images,…",8,[[["renderer",3]],[["renderererror",4],["result",4]]]],[11,"new","","Create a new render target with the specified dimensions",9,[[["renderer",3],["vector2",3]],[["renderererror",4],["result",4],["spriterendertarget",3]]]],[11,"begin_render","","Get a render context for the current swap chain frame.",9,[[],[["renderererror",4],["result",4]]]],[11,"sprite","","Get the sprite which can be used to render the contents of…",9,[[],["sprite",3]]],[0,"ext","","Traits and structs required to use custom WGPU devices.",null,null],[3,"WindowWGPUDevice","riddle_renderer_wgpu::ext","A standard Renderer WGPU device used with…",null,null],[8,"RendererWGPUDevice","","A [`Renderer`] compatible WGPU device.",null,null],[10,"device","","",10,[[],["device",3]]],[10,"queue","","",10,[[],["queue",3]]],[10,"begin_frame","","Called when the [`Renderer`] begins rendering to the swap…",10,[[],[["renderererror",4],["result",4]]]],[10,"end_frame","","When the renderer is done renderering to the swap chain…",10,[[]]],[10,"viewport_dimensions","","The viewport dimensions of the swapchain frame.",10,[[],["vector2",3]]],[10,"with_frame","","Provide a reference to the current swap chain frame for…",10,[[["fnmut",8]],[["renderererror",4],["result",4]]]],[8,"RendererWGPU","","Extension trait for [`Renderer`] to support creating…",null,null],[10,"wgpu_device","","The WGPU device which the renderer was constructed with",11,[[],["rendererwgpudevice",8]]],[10,"new_from_device","","Create a [`Renderer`] from a custom device.",11,[[["rendererwgpudevice",8],["box",3]],[["renderererror",4],["result",4],["rendererhandle",3]]]],[11,"new","","",12,[[["window",3]],[["renderererror",4],["result",4]]]],[8,"RenderContext","riddle_renderer_wgpu","Types which accept render calls, tracks current world…",null,null],[10,"set_transform","","Replace the current world transform.",13,[[["columnmatrix4",3]],[["renderererror",4],["result",4]]]],[10,"clear","","Fill the target with a flat color.",13,[[["color",3]],[["renderererror",4],["result",4]]]],[10,"render_internal","","Render a `Renderable` to the target with the current world…",13,[[],[["renderererror",4],["result",4]]]],[10,"fill_rect","","Draw a solid rect with the given color.",13,[[["color",3],["rect",3]],[["renderererror",4],["result",4]]]],[10,"present","","Consume the context and present any outstanding draw calls.",13,[[],[["renderererror",4],["result",4]]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","riddle_renderer_wgpu::ext","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"device","","",12,[[],["device",3]]],[11,"queue","","",12,[[],["queue",3]]],[11,"viewport_dimensions","","",12,[[],["vector2",3]]],[11,"begin_frame","","",12,[[],[["renderererror",4],["result",4]]]],[11,"end_frame","","",12,[[]]],[11,"with_frame","","",12,[[["fnmut",8]],[["renderererror",4],["result",4]]]],[11,"wgpu_device","riddle_renderer_wgpu","",4,[[],["rendererwgpudevice",8]]],[11,"new_from_device","","Or the renderer can be built on top of existing WGPU…",4,[[["rendererwgpudevice",8],["box",3]],[["renderererror",4],["result",4],["rendererhandle",3]]]],[11,"from","","",0,[[["imageerror",4]]]],[11,"from","","",0,[[["commonerror",4]]]],[11,"clone","","",2,[[],["rendererhandle",3]]],[11,"clone","","",3,[[],["rendererweak",3]]],[11,"clone","","",6,[[],["spriterendercommand",3]]],[11,"default","","",6,[[]]],[11,"default","","",1,[[]]],[11,"deref","","",2,[[],["renderer",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"source","","",0,[[],[["error",8],["option",4]]]],[11,"clone_handle","","",4,[[],["rendererhandle",3]]],[11,"clone_weak_handle","","",4,[[],["rendererweak",3]]]],"p":[[4,"RendererError"],[4,"FilterMode"],[3,"RendererHandle"],[3,"RendererWeak"],[3,"Renderer"],[3,"Sprite"],[3,"SpriteRenderCommand"],[3,"SpriteBuilder"],[3,"SpriteAtlasBuilder"],[3,"SpriteRenderTarget"],[8,"RendererWGPUDevice"],[8,"RendererWGPU"],[3,"WindowWGPUDevice"],[8,"RenderContext"]]},\
"riddle_time":{"doc":"Riddle crate supporting some basic game-centric time…","i":[[3,"TimeSystem","riddle_time","The Riddle time system core state.",null,null],[3,"TimeSystemHandle","","",null,null],[3,"TimeSystemWeak","","",null,null],[3,"TimerHandle","","A handle to a timer created by…",null,null],[11,"downgrade","","Downgrade this handle to a weak handle",0,[[["timesystemhandle",3]],["timesystemweak",3]]],[11,"eq","","Test whether two handles point to the same location in…",0,[[["timesystemhandle",3]]]],[11,"upgrade","","Upgrade a weak handle to a strong handle. Returns None if…",1,[[["timesystemweak",3]],[["option",4],["timesystemhandle",3]]]],[11,"new","","Create a new time system. The time the system is created…",2,[[],["timesystemhandle",3]]],[11,"process_frame","","Update the time system state, marking the beginning of a…",2,[[]]],[11,"fps","","Get the current FPS as calculated based on previous frame…",2,[[]]],[11,"delta_secs","","Get the current delta t as calculated based on previous…",2,[[]]],[11,"frame_instant","","Get the reference time for this frame. Captured during…",2,[[],["instant",3]]],[11,"register_timer","","Register a timer with a callback which will be fired when…",2,[[["duration",3]],["timerhandle",3]]],[11,"cancel","","Cancel a pending timer.",3,[[]]],[11,"pending","","Check whether a timer has yet to fire.",3,[[]]],[0,"doctest","","DO NOT RELY ON THIS MODULE",null,null],[5,"simple","riddle_time::doctest","",null,[[["fnonce",8]]]],[5,"pump_for_secs","","",null,[[["timesystem",3]]]],[11,"from","riddle_time","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"clone","","",0,[[],["timesystemhandle",3]]],[11,"clone","","",1,[[],["timesystemweak",3]]],[11,"deref","","",0,[[],["timesystem",3]]],[11,"clone_handle","","",2,[[],["timesystemhandle",3]]],[11,"clone_weak_handle","","",2,[[],["timesystemweak",3]]]],"p":[[3,"TimeSystemHandle"],[3,"TimeSystemWeak"],[3,"TimeSystem"],[3,"TimerHandle"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);