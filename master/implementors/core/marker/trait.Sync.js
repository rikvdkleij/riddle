(function() {var implementors = {};
implementors["riddle"] = [{"text":"impl&lt;'a&gt; !Sync for RiddleContext&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for RiddleLib","synthetic":true,"types":[]},{"text":"impl Sync for RiddleState","synthetic":true,"types":[]},{"text":"impl Sync for RiddleError","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]}];
implementors["riddle_audio"] = [{"text":"impl Sync for AudioSystem","synthetic":true,"types":[]},{"text":"impl Sync for AudioSystemHandle","synthetic":true,"types":[]},{"text":"impl Sync for AudioSystemWeak","synthetic":true,"types":[]},{"text":"impl !Sync for AudioMainThreadState","synthetic":true,"types":[]},{"text":"impl Sync for Clip","synthetic":true,"types":[]},{"text":"impl Sync for ClipPlayer","synthetic":true,"types":[]},{"text":"impl Sync for ClipPlayerBuilder","synthetic":true,"types":[]},{"text":"impl Sync for ClipFormat","synthetic":true,"types":[]},{"text":"impl Sync for PlayMode","synthetic":true,"types":[]},{"text":"impl Sync for AudioError","synthetic":true,"types":[]}];
implementors["riddle_common"] = [{"text":"impl&lt;E&gt; Sync for Color&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for CommonError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for EventPub&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for EventSub&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["riddle_font"] = [{"text":"impl Sync for TTFont","synthetic":true,"types":[]},{"text":"impl Sync for FontError","synthetic":true,"types":[]}];
implementors["riddle_image"] = [{"text":"impl Sync for Image","synthetic":true,"types":[]},{"text":"impl Sync for ImageFormat","synthetic":true,"types":[]},{"text":"impl Sync for ImageError","synthetic":true,"types":[]}];
implementors["riddle_input"] = [{"text":"impl Sync for GamePadId","synthetic":true,"types":[]},{"text":"impl Sync for InputSystem","synthetic":true,"types":[]},{"text":"impl Sync for InputSystemHandle","synthetic":true,"types":[]},{"text":"impl Sync for InputSystemWeak","synthetic":true,"types":[]},{"text":"impl !Sync for InputMainThreadState","synthetic":true,"types":[]},{"text":"impl Sync for KeyboardModifiers","synthetic":true,"types":[]},{"text":"impl Sync for InputError","synthetic":true,"types":[]},{"text":"impl Sync for InputEvent","synthetic":true,"types":[]},{"text":"impl Sync for GamePadButton","synthetic":true,"types":[]},{"text":"impl Sync for GamePadAxis","synthetic":true,"types":[]}];
implementors["riddle_math"] = [{"text":"impl&lt;T&gt; Sync for Rect&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Vector2&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["riddle_platform_common"] = [{"text":"impl Sync for LogicalSize","synthetic":true,"types":[]},{"text":"impl Sync for LogicalPosition","synthetic":true,"types":[]},{"text":"impl Sync for LogicalVec2","synthetic":true,"types":[]},{"text":"impl Sync for WindowId","synthetic":true,"types":[]},{"text":"impl Sync for PlatformEvent","synthetic":true,"types":[]},{"text":"impl Sync for MouseButton","synthetic":true,"types":[]},{"text":"impl Sync for Scancode","synthetic":true,"types":[]},{"text":"impl Sync for VirtualKey","synthetic":true,"types":[]}];
implementors["riddle_platform_winit"] = [{"text":"impl&lt;'a&gt; !Sync for PlatformContext&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for PlatformSystem","synthetic":true,"types":[]},{"text":"impl Sync for PlatformSystemHandle","synthetic":true,"types":[]},{"text":"impl Sync for PlatformSystemWeak","synthetic":true,"types":[]},{"text":"impl !Sync for PlatformMainThreadState","synthetic":true,"types":[]},{"text":"impl Sync for Window","synthetic":true,"types":[]},{"text":"impl Sync for WindowHandle","synthetic":true,"types":[]},{"text":"impl Sync for WindowWeak","synthetic":true,"types":[]},{"text":"impl Sync for WindowBuilder","synthetic":true,"types":[]},{"text":"impl Sync for PlatformError","synthetic":true,"types":[]}];
implementors["riddle_renderer_wgpu"] = [{"text":"impl Sync for SpriteRenderCommand","synthetic":true,"types":[]},{"text":"impl Sync for SpriteBuilder","synthetic":true,"types":[]},{"text":"impl Sync for RendererError","synthetic":true,"types":[]},{"text":"impl Sync for FilterMode","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for WGPUDeviceInfo&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Device&gt; Sync for WGPURenderer&lt;Device&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Device: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for WGPURendererHandle&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for WGPURendererWeak&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Device&gt; Sync for WGPUSprite&lt;Device&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Device: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, Device&gt; Sync for WGPUSpriteAtlasBuilder&lt;'a, Device&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Device: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Device&gt; Sync for WGPUSpriteRenderTarget&lt;Device&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Device: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for WindowWGPUDevice","synthetic":true,"types":[]}];
implementors["riddle_time"] = [{"text":"impl Sync for TimeSystem","synthetic":true,"types":[]},{"text":"impl Sync for TimeSystemHandle","synthetic":true,"types":[]},{"text":"impl Sync for TimeSystemWeak","synthetic":true,"types":[]},{"text":"impl Sync for TimerHandle","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()